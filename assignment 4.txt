Write a program that takes a list of numbers as input and prints the
even numbers in the list using a for loop.
Example:
Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Output: 2 4 6 8 10





void main() {
  List<int> numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
  
  for (int number in numbers) {
    if (number % 2 == 0) {
      print(number);
    }
  }
}


===================================================================


Write a program that prints the Fibonacci sequence up to a given
number using a for loop.
Example:
Input: 10
Output: 0 1 1 2 3 5 8



void printFibonacciSequence(int n) {
  int a = 0;
  int b = 1;

  print(a); // Sequence ka pehla number print karen

  if (n > 1) {
    print(b); // Sequence ka doosra number print karen

    for (int i = 2; i < n; i++) {
      int c = a + b;
      print(c);
      a = b;
      b = c;
    }
  }
}

void main() {
  int number = 10;
  printFibonacciSequence(number);
}


====================================================


Implement a code that checks whether a given number is prime or not.
Example:
Input: 17
Output: 17 is a prime number





bool isPrime(int number) {
  if (number <= 1) {
    return false; // Numbers 1 se chote ya barabar nahi ho sakte
  }

  for (int i = 2; i <= number / 2; i++) {
    if (number % i == 0) {
      return false; // Number divisible hai, isliye prime nahi hai
    }
  }

  return true; // Number prime hai
}

void main() {
  int number = 17;

  if (isPrime(number)) {
    print('$number is a prime number.');
  } else {
    print('$number is not a prime number.');
  }
}

==========================================================
Implement a code that finds the factorial of a number using a while
loop or for loop.
Example:
Input: 5
Output: Factorial of 5 is 120





void main() {
  int number = 5; 
  int factorial = 1;
  
  for (int i = 1; i <= number; i++) {
    factorial *= i;
  }
  
  print('Factorial of $number is $factorial');
}



================================================


Write a program that calculates the sum of all the digits in a given
number using a while loop.
Example:
Input: 12345
Output: Sum of digits: 15




int findLargest(List<int> numbers) {
  if (numbers.isEmpty) {
    throw Exception("List is empty");
  }

  int largest = numbers[0];

  for (int i = 1; i < numbers.length; i++) {
    largest = (numbers[i] > largest) ? numbers[i] : largest;
  }

  return largest;
}

void main() {
  List<int> numbers = [3, 9, 1, 6, 4, 2, 8, 5, 7];
  int largest = findLargest(numbers);
  print('Largest element: $largest');
}


====================================================
Implement a code that finds the largest element in a list using a for
loop.
Example:
Input: [3, 9, 1, 6, 4, 2, 8, 5, 7]
Output: Largest element: 9



void printMultiplicationTable(int number) {
  for (int i = 1; i <= 10; i++) {
    int result = number * i;
    print('$number x $i = $result');
  }
}

void main() {
  int number = 5;
  printMultiplicationTable(number);
}

=================================================================



Write a program that prints the multiplication table of a given number
using a for loop.
Example:
Input: 5
Output:
5 x 1 = 5
5 x 2 = 10
5 x 3 = 15
...
5 x 10 = 50






void main() {
 int number = 5;

  for (int i = 1; i <= 10; i++) {
    int result = number * i;
    print('$number x $i = $result');
  }
}

==================================================


Implement a function that checks if a given string is a palindrome.
Example:
Input: "radar"
Output: "radar" is a palindrome.


void main() {
 int Number = 9;
  for (int i = 1; i <= Number; i++) {
    int cube = i * i * i;
    print('Number is: $i and cube of $i is: $cube');
  }}


==============================================

Write a program to display the cube of the number up to an integer.
Test Data :
Input number of terms : 5
Expected Output :
Number is : 1 and cube of the 1 is :1
Number is : 2 and cube of the 2 is :8
Number is : 3 and cube of the 3 is :27
Number is : 4 and cube of the 4 is :64
Number is : 5 and cube of the 5 is :125



void main() {
 int pattern = 4;
  for (int i = 1; i <= pattern; i++) {
    for (int j = 1; j <= i; j++) {
      print('*');
    }
    print('');
  }
}


==========================================


Write a program to display a pattern like a right angle triangle using an
asterisk using loop.
The pattern like :
*
**
***
****




void main() {
 int pattern = 4;

  for (int i = 1; i <= pattern; i++) {
    for (int j = 1; j <= i; j++) {
      print(j);
    }
    print('');
  }
}



====================================================


Write a program to display a pattern like a right angle triangle with a
number using loop.
The pattern like :
1
12
123
1234



void main() {
 int pattern= 4;
  for (int i = 1; i <= pattern; i++) {
    for (int j = 1; j <= i; j++) {
      print(i);
    }
    print('');
  }
}




=====================================



Write a program to make such a pattern like a right angle triangle with
a number which will repeat a number in a row.
The pattern like :
 1
 22
 333
 4444






void main() {
 int pattern= 4;
  int number = 1;

  for (int i = 1; i <= pattern; i++) {
    for (int j = 1; j <= i; j++) {
      print(number);
      number++;
    }
    print('');
  }
}


===============================================


Write a program to make such a pattern like a right angle triangle with
the number increased by 1 using loop..
The pattern like :
 1
 2 3
 4 5 6
 7 8 9 10





void main() {

int pattern = 4;
  int number = 1;

  for (int i = 1; i <= pattern; i++) {
    for (int j = 1; j <= i; j++) {
      print(number);
      number++;
    }
    print('');
  }
}


============================================


Write a program to make a pyramid pattern with numbers increased by
1
2 3
4 5 6
7 8 9 10 



void printNumberPyramid(int rows) {
  int number = 1;
  for (int i = 1; i <= rows; i++) {
    String row = "";
    for (int j = 1; j <= i; j++) {
      row += "$number ";
      number++;
    }
    print(row);
  }
}

void main() {
  int numRows = 4;
  printNumberPyramid(numRows);
}


============================================


Write a program to make such a pattern as a pyramid with an asterisk.
   *
  * *
 * * *
* * * *


void printAsteriskPyramid(int rows) {
  for (int i = 1; i <= rows; i++) {
    String row = "";
    for (int j = 1; j <= i; j++) {
      row += "* ";
    }
    print(row);
  }
}

void main() {
  int numRows = 4;
  printAsteriskPyramid(numRows);
}



=====================================================


Write a program that asks the user for their email and password. If the
email and password match a predefined set of credentials, print "User
login successful." Otherwise, keep asking for the email and password
until the correct credentials are provided.





import 'dart:io';

void main() {
  // Pre-defined credentials
  final String correctEmail = "user@example.com";
  final String correctPassword = "password123";

  // Prompt for email and password until correct credentials are provided
  while (true) {
    String email = promptInput("Apna email dalein: ");
    String password = promptInput("Apna password dalein: ");

    if (email == correctEmail && password == correctPassword) {
      print("User login successful.");
      break;
    } else {
      print("Ghalat credentials. Dobara koshish karein.\n");
    }
  }
}

String promptInput(String prompt) {
  stdout.write(prompt);
  return stdin.readLineSync()!.trim();
}




=====================================================

Write a program that asks the user for their email and password. You
are given a list of predefined user credentials (email and password
combinations). If the entered email and password match any of the
credentials in the list, print "User login successful." Otherwise, keep
asking for the email and password until the correct credentials are
provided.





import 'dart:io';

void main() {
  // Predefined user credentials
  List<Map<String, String>> credentials = [
    {"email": "user1@example.com", "password": "password1"},
    {"email": "user2@example.com", "password": "password2"},
    {"email": "user3@example.com", "password": "password3"}
  ];

  // Prompt for email and password until correct credentials are provided
  while (true) {
    String email = promptInput("Enter your email: ");
    String password = promptInput("Enter your password: ");

    bool credentialsMatch = false;
    for (var userCredentials in credentials) {
      if (email == userCredentials['email'] && password == userCredentials['password']) {
        credentialsMatch = true;
        break;
      }
    }

    if (credentialsMatch) {
      print("User login successful.");
      break;
    } else {
      print("Incorrect credentials. Please try again.\n");
    }
  }
}

String promptInput(String prompt) {
  print(prompt);
  return stdin.readLineSync()!.trim();
}



===================================================





Write a program that takes a list of numbers as input and prints the
numbers greater than 5 using a for loop and if-else condition.


void main() {
  String input = "Hello, World!";
  int vowelCount = 0;

  for (int i = 0; i < input.length; i++) {
    String char = input[i].toLowerCase();
    if (char == 'a' || char == 'e' || char == 'i' || char == 'o' || char == 'u') {
      vowelCount++;
    }
  }

  print("Number of vowels: $vowelCount");
}

====================================================

Write a program that counts the number of vowels in a given string
using a for loop and if-else condition.



void main() {
  Map<String, dynamic> car = {
    'brand': 'Toyota',
    'color': 'Red',
    'isSedan': true,
  };

  if (car['isSedan'] == true && car['color'] == 'Red') {
    print('Match');
  } else {
    print('No match');
  }
}


==================================================



Implement a code that finds the maximum and minimum elements in a
list using a for loop and if-else condition.



void findMinMax(List<int> numbers) {
  if (numbers.isEmpty) {
    print("List is empty.");
    return;
  }

  int min = numbers[0];
  int max = numbers[0];

  for (int i = 1; i < numbers.length; i++) {
    if (numbers[i] < min) {
      min = numbers[i];
    } else if (numbers[i] > max) {
      max = numbers[i];
    }
  }

  print("Minimum element: $min");
  print("Maximum element: $max");
}

void main() {
  List<int> numbers = [5, 2, 9, 3, 7, 1, 8, 4, 6];
  findMinMax(numbers);
}



====================================================


Write a program that calculates the sum of the squares of all odd
numbers in a given list using a for loop and if-else condition.



void main() {
  List<int> numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];
  int sumOfSquares = 0;

  for (int number in numbers) {
    if (number % 2 != 0) {
      sumOfSquares += number * number;
    }
  }

  print("Sum of squares of odd numbers: $sumOfSquares");
}



========================================================

Write a program that takes a list of student details as input, where
each student is represented by a map containing their name, marks,
section, and roll number. The program should determine the grade of
each student based on their average score (assuming maximum marks
for each subject is 100) and print the student's name along with their
grade.
List<Map<String, dynamic>> studentDetails = [
 {'name': 'John', 'marks': [80, 75, 90], 'section': 'A', 'rollNumber': 101},
 {'name': 'Emma', 'marks': [95, 92, 88], 'section': 'B', 'rollNumber': 102},
 {'name': 'Ryan', 'marks': [70, 65, 75], 'section': 'A', 'rollNumber': 103},
]






void main(){
   List<int> numbers = [-9, 5, -2, 5, -3, 0, -7, 9];
  int count = 0;
  int sum = 0;

  for (int number in numbers) {
    if (number < 0) {
      count++;
      sum += number;
    }
  }

  double average = count > 0 ? sum / count : 0;

  print('Average of negative numbers: $average');

}


================================================

Implement a code that finds the average of all the negative numbers in
a list using a for loop and if-else condition




void main() {
  List<int> numbers = [5, -2, -9, 3, -7, 1, -8, 4, -6];
  int count = 0;
  int sum = 0;

  for (int number in numbers) {
    if (number < 0) {
      count++;
      sum += number;
    }
  }

  double average = (count > 0) ? sum / count : 0;

  print("Average of negative numbers: $average");
}


=====================================================


Write a program that takes a list of integers as input and returns a new
list containing only the prime numbers from the original list. Implement
the solution using a for loop and logical operations.
Input: [4, 7, 10, 13, 16, 19, 22, 25, 28, 31]
Output: [7, 13, 19, 31]




void main() {
  List<int> numbers = [4, 7, 10, 13, 16, 19, 22, 25, 28, 31];
  List<int> primeNumbers = [];

  for (int number in numbers) {
    if (number > 1 && isPrime(number)) primeNumbers.add(number);
  }

  print("Input: $numbers");
  print("Output: $primeNumbers");
}

bool isPrime(int number) {
  for (int i = 2; i <= number / 2; i++) {
    if (number % i == 0) return false;
  }
  return true;
}


